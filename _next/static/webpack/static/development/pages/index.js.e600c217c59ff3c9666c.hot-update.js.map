{"version":3,"file":"static/webpack/static/development/pages/index.js.e600c217c59ff3c9666c.hot-update.js","sources":["webpack:///./components/PrioritySelect.js"],"sourcesContent":["import Select from 'react-select';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faList, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { removePriorityById } from '../mock_api/models'\n\n// react-select has its own preferred way for styling.\nlet customStyles = {      \n  control: (base, state) => ({\n    ...base,\n    background: \"#f0bb39\",\n    border: state.isFocused ? 0 : 0,\n    // This line disable the blue border\n    boxShadow: state.isFocused ? 0 : 0,\n    '&:hover': { border: state.isFocused ? 0 : 0 },\n    height: '54px',\n    'minHeight': '54px',\n    'borderRadius': '0px',\n    fontFamily: \"Arial\",\n    fontSize: '20px',\n    'fontWeight': 700,\n    flex: 1,\n  }),\n  singleValue: (provided, state) => { return { ...provided, fontWeight: 900, color: 'black' }; }\n};\n\nlet selectStyle = <style jsx=\"true\">{`\n.select-wrapper {\n  position: absolute;\n  display: flex;\n  flex-direction: row;\n  width: 100vw;\n  height: 100px;\n  right: 0;\n  top: 80px;\n  align-items: center;\n}\n\n.select { flex: 1 }\n\n.select-label {\n  display: flex;\n  height: 54px;\n  width: 100px;\n  padding: 0px;\n  margin: 0px;\n  background-color: #6d695f;\n  font-size: 20px;\n  font-weight: 700;\n  align-items: center;\n  justify-content: center;\n}\n\n.remove-priority:hover { color: red; }\n\n.option-container {\n  display: flex;\n  width: 100%;\n  justify-content: space-between;\n}\n\n.react-select__single-value .priority-option {\n  visibility: hidden;\n}\n`}</style>;\n\n\n\n\nconst PrioritySelect = props => {\n  let { priorities, pickedPriorityId, setPickedPriorityId } = props;\n  let options = priorities.map(priority => ({ value: priority.id,  label: priority.name }));\n  let picked = options.find(option => option.value === pickedPriorityId) || null;\n\n  const formatOptionLabel = ({ value, label, customAbbreviation }) => (\n    <div className=\"option-container\">\n      <div>{label}</div>\n      <div className=\"priority-option\">\n        {customAbbreviation} \n        <div className=\"remove-priority\" onClick={((e) => {\n          e.stopPropagation();\n          let newPriorities = removePriorityById(value);\n          if (newPriorities.length === 0) { return setPickedPriorityId(null); }\n          if (newPriorities.findIndex(p => p.id === pickedPriorityId) === -1) { setPickedPriorityId(newPriorities[0].id); }\n        })}> <FontAwesomeIcon icon={faTrash} /> </div>\n      </div>\n    </div>\n  );\n  \n  return <div className=\"select-wrapper\">\n    <div className=\"select-label\"> Sort by: </div>\n    <Select className=\"select\" instanceId=\"selectPriority\" classNamePrefix=\"react-select\"\n      value={picked}\n      onChange={(selected) => setPickedPriorityId(selected.value)}\n      formatOptionLabel={formatOptionLabel}\n      options={options}\n      components={{ IndicatorSeparator: () => null }}\n      styles={customStyles}\n    />\n    {selectStyle}\n  </div>;\n};\n  \nexport default PrioritySelect;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;AACA;AAkBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA0CA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;AACA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;;;;A","sourceRoot":""}