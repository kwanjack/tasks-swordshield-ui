{"version":3,"file":"static/webpack/static/development/pages/index.js.47d16093f6a87a7614ac.hot-update.js","sources":["webpack:///./mock_api/models.js"],"sourcesContent":["/*\nTask {\n\tid: String\n\tname: String\n}\n\nPriority {\n\tid: String\n\tname: String\n\tranking: [ TaskIds ]\n}\n*/\n\nimport PubSub from 'pubsub-js';\nimport { dummyTasks, dummyPriorities } from './dummyData';\n\nfunction generateId() { return '_' + Math.random().toString(36).substr(2, 9); }\n\nexport function getTasks() {\n  let tasksJSON = localStorage.getItem('tasks');\n  if (!tasksJSON) {\n    localStorage.setItem('tasks', JSON.stringify(dummyTasks));\n    localStorage.setItem('priorities', JSON.stringify(dummyPriorities));\n    tasksJSON = localStorage.getItem('tasks');\n    PubSub.publish('tasks', JSON.parse(tasksJSON));\n  }\n  return JSON.parse(tasksJSON);\n}\n\nexport function getPriorities() {\n  let priortiesJSON = localStorage.getItem('priorities');\n  if (!priortiesJSON) {\n    localStorage.setItem('tasks', JSON.stringify(dummyTasks));\n    localStorage.setItem('priorities', JSON.stringify(dummyPriorities));\n    priortiesJSON = localStorage.getItem('priorities');\n    PubSub.publish('priorities', JSON.parse(priortiesJSON));\n  }\n  return JSON.parse(priortiesJSON);\n}\n\n\nexport function addTaskByName(taskName) {\n  let tasks = getTasks();\n  let task = { id: generateId(), name: taskName };\n  tasks.push(task);\n\n  let priorities = getPriorities();\n\n  for (let priority of priorities) {\n    priority.ranking.unshift(task.id);\n  }\n\n  localStorage.setItem('tasks', JSON.stringify(tasks));\n  localStorage.setItem('priorities', JSON.stringify(priorities));\n  PubSub.publish('tasks', tasks);\n  PubSub.publish('priorities', priorities);\n  return tasks;\n}\n\nexport function removeTaskById(taskId) {\n  let tasks = getTasks();\n  let priorities = getPriorities();\n\n  let newTasks = tasks.filter(task => task.id !== taskId);\n  let newPriorities = priorities.map(priority =>  ({ ...priority, ranking: priority.ranking.filter(id => id !== taskId) }));\n  localStorage.setItem('tasks', JSON.stringify(newTasks));\n  localStorage.setItem('priorities', JSON.stringify(newPriorities));\n  PubSub.publish('tasks', newTasks);\n  PubSub.publish('priorities', newPriorities);\n}\n\nexport function addPriorityByName(priorityName) {\n  let priorities = getPriorities();\n  let tasks = getTasks();\n\n  let priority = {\n    id: generateId(),\n    name: priorityName,\n    ranking: tasks.map(task => task.id)\n  };\n\n  priorities.push(priority);\n  localStorage.setItem('priorities', JSON.stringify(priorities));\n  PubSub.publish('priorities', priorities);\n  return priority;\n}\n\nexport function removePriorityById(priorityId) {\n  let priorities = getPriorities();\n  priorities = priorities.filter(p => p.id !== priorityId);\n\n  localStorage.setItem('priorities', JSON.stringify(priorities));\n  PubSub.publish('priorities', priorities);\n  return priorities;\n}\n\nexport function moveTaskToRank(taskId, priorityId, position) {\n  let priorities = getPriorities();\n  let tasks = getTasks();\n\n  let priorityIdx = priorities.findIndex(priority => priority.id === priorityId);\n  let priority = priorities[priorityIdx];\n  let ranking = priority.ranking.slice();\n\n  let withoutItem = ranking.filter( item => item !== taskId);\n  \n  let newRanking = [...withoutItem.slice(0,position), taskId, ...withoutItem.slice(position)];\n\n  let newPriority = {\n    ...priority,\n    ranking: newRanking,\n  };\n\n  priorities[priorityIdx] = newPriority;\n  localStorage.setItem('priorities', JSON.stringify(priorities));\n  PubSub.publish('priorities', priorities);\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AALA;AAAA;AAAA;AACA;AADA;AAOA;AAAA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAHA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AAFA;AACA;AAIA;AACA;AACA;AACA;;;;A","sourceRoot":""}